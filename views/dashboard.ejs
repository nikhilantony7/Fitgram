<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="/css/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="/js/dashboard.js"></script>

  <style>
    body {
      margin: 0;
      overflow-x: hidden;
      background-color: #f4f6f9;
      font-family: Arial, sans-serif;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
    }

    .card {
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transition: transform 0.2s ease-in-out;
      height: 100%;
    }

    .card:hover {
      transform: scale(1.03);
    }

    .goals-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .goals-list li {
      padding: 10px 0;
    }

    .progress {
      height: 20px;
      border-radius: 10px;
    }

    .progress-bar {
      font-size: 14px;
      line-height: 20px;
      color: #fff;
      text-align: center;
    }

    .profile-picture {
      transition: transform 0.3s ease-in-out;
    }

    .profile-picture:hover {
      transform: scale(1.05);
    }

    #editOverlay {
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
      pointer-events: none; /* Blocks interactions initially */
    }

    #profilePic:hover ~ #editOverlay, /* Show overlay when profilePic is hovered */
    #editOverlay:hover {
      opacity: 1; /* Fade in overlay */
      pointer-events: all; /* Allow overlay to receive clicks */
    }


  </style>
</head>
<body>

<!-- Top Navigation Bar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Fitgram</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/dashboard">Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/feed">Feed</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/social">Social</a>
          </li>
          <li class="nav-item">
            <a class="nav-link text-danger" href="/logout">Logout</a>
          </li>
          
        </ul>
      </div>
    </div>
  </nav>



  <div class="container my-5">
      
  <!-- Profile Card Section -->
    <div class="row justify-content-center mb-4">
      <div class="col-lg-6 col-md-8">
        <div class="card shadow-sm p-3 d-flex flex-row align-items-center">
          <!-- Profile Picture as a Button -->
            <button
            type="button"
            class="btn p-0 position-relative"
            data-bs-toggle="modal"
            data-bs-target="#uploadModal"
            style="border: none; background: none; width: 100px; height: 100px;"
          >
            <% if (user.profilePicture && user.profilePicture.data) { %>
              <img
                src="data:<%= user.profilePicture.contentType %>;base64,<%= user.profilePicture.data.toString('base64') %>"
                alt="Profile Picture"
                class="rounded-circle"
                style="width: 100px; height: 100px; object-fit: cover;"
              >
            <% } else { %>
              <div
                class="rounded-circle bg-light d-flex align-items-center justify-content-center"
                style="width: 100px; height: 100px;"
              >
                <span class="text-muted">Profile Picture</span>
              </div>
            <% } %>
            
          </button>

          <!-- User Details -->
          <div class="ms-3">
            <h5 class="mb-1">Hello, <%= user.username %>!</h5>
            <p class="mb-0"><strong>Age:</strong> <%= age %> years</p>
            <p class="mb-0"><strong>Weight:</strong> <%= user.weight || 'N/A' %> kg</p>
            <p class="mb-0"><strong>Height:</strong> <%= user.height || 'N/A' %> cm</p>
            <p class="mb-0"><strong>Goal Weight:</strong> <%= user.goalWeight || 'N/A' %> kg</p>
          </div>
        </div>
      </div>
    </div>

    <!--Metrics Card-->
    
      <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 mb-4">
          <div class="card h-100">
            <div class="card-header bg-secondary text-white">Metrics (This Week)</div>
            <div class="card-body">
              <div class="row">
                <div class="col-6 border-end">
                  <h5 class="card-title">Calories Burned</h5>
                  <p class="card-text"><%= workoutStats.totalCalories %> kcal</p>
                </div>
                <div class="col-6">
                  <h5 class="card-title">Total Workouts</h5>
                  <p class="card-text"><%= workoutStats.totalWorkouts %></p>
                </div>
              </div>
              <div class="row mt-3">
                <div class="col-6 border-end">
                  <h5 class="card-title">Total Duration</h5>
                  <p class="card-text"><%= workoutStats.totalDuration %> mins</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Goals Card -->
        <div class="col-lg-6 col-md-8 mb-4">
          <div class="card h-100">
            <div class="card-header bg-secondary text-white">Goals</div>
            <div class="card-body">
              <ul class="goals-list">
                <% for (const [key, goal] of Object.entries(goals)) { %>
                  <li class="d-flex justify-content-between align-items-center mb-2">
                    <span>
                      <strong><%= goal.name %></strong><br>
                      <small><%= goal.progress %> / <%= goal.goal %></small>
                    </span>
                    <div class="progress w-50">
                      <div 
                        class="progress-bar" 
                        role="progressbar" 
                        style="width: <%- goal.percentage %>%;" 
                        aria-valuenow="<%- goal.percentage %>" 
                        aria-valuemin="0" 
                        aria-valuemax="100">
                        <%= goal.progress %> / <%= goal.goal %>
                      </div>
                    </div>
                  </li>
                <% } %>
              </ul>

              <!-- Edit Goals Button -->
              <button class="btn btn-outline-secondary mt-3" onclick="openGoalPopup()">Edit Goals</button>
            </div>
          </div>
        </div>

        <!-- Hidden Edit Goal Form Popup -->
        <div id="goalModal" class="modal" tabindex="-1" style="display:none;">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Edit Goals</h5>
                <button type="button" class="btn-close" onclick="closeGoalPopup()"></button>
              </div>
              <form action="/update-goals" method="POST">
                <div class="modal-body">
                  <div class="mb-3">
                    <label for="workoutFrequency" class="form-label">Workouts Per Week</label>
                    <input type="number" class="form-control" name="workoutFrequency" id="workoutFrequency" min="1" required>
                  </div>
                  <div class="mb-3">
                    <label for="caloriesBurned" class="form-label">Calories Burned Weekly</label>
                    <input type="number" class="form-control" name="caloriesBurned" id="caloriesBurned" min="1" required>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" onclick="closeGoalPopup()">Close</button>
                  <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
              </form>
            </div>
          </div>
        </div>

      </div>

    <!--Workout type chart-->
    <div class="row justify-content-center my-4">
      <div class="col-lg-6 mb-4">
        <div class="card h-100">
          <div class="card-header bg-primary text-white">Workout Types</div>
          <div class="card-body">
            <canvas id="workoutChart"></canvas>
          </div>
        </div>
      </div>

    <!--Activity Chart-->
    
    <div class="col-lg-6 mb-4">
      <div class="card h-100 d-flex flex-column">
        <div class="card-header bg-success text-white">Activity Progress</div>
        <div class="card-body flex-grow-1 d-flex align-items-center justify-content-center">
          <canvas id="activityChart" style="height: 100%; width: 100%;"></canvas>
        </div>
      </div>
    </div>


    <!--Workout List-->
    <div class="card my-4">
      <div class="card-header bg-info text-white">
        <span>Completed Workouts</span>
        <div class="ms-auto">
          <button 
            class="btn btn-success mt-3 add-workout-button">
            + Add Workout
          </button>
        </div>
             
      </div>
      <div class="card-body" style="max-height: 300px; overflow-y: auto;">
        <ul class="list-group">
          <% workouts.forEach((workout, index) => { %>
            <li class="list-group-item d-flex justify-content-between align-items-center">
              <span>
                <strong>Type:</strong> <%= workout.type %>, 
                <strong>Duration:</strong> <%= workout.duration %> mins, 
                <strong>Calories:</strong> <%= workout.calories %> kcal, 
                <strong>Date:</strong> <%= workout.date %>
              </span>
              <button 
                class="btn btn-outline-primary btn-sm edit-button" 
                data-workout='<%- JSON.stringify(workout) %>' 
                data-index="<%= index %>">
                Edit
              </button>
            

            </li>
          <% }); %>
        </ul>
        
      </div>
    </div>
    
  </div>

  <div id="workoutPopup" class="popup hidden">
    <div class="popup-content">
      <span class="close-btn" onclick="closeWorkoutPopup()">&times;</span>
      <h5 id="popupTitle">Add/Edit Workout</h5>
      <form id="workoutForm" action="/workouts" method="POST">
        <input type="hidden" id="workoutIndex" name="workoutIndex">
        <div class="mb-3">
          <label for="type" class="form-label">Type</label>
          <input type="text" class="form-control" id="type" name="type" required>
        </div>
        <div class="mb-3">
          <label for="duration" class="form-label">Duration (mins)</label>
          <input type="number" class="form-control" id="duration" name="duration" required>
        </div>
        <div class="mb-3">
          <label for="calories" class="form-label">Calories Burned</label>
          <input type="number" class="form-control" id="calories" name="calories" required>
        </div>
        <div class="mb-3">
          <label for="date" class="form-label">Date</label>
          <input type="date" class="form-control" id="date" name="date" required>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
      </form>
    </div>
  </div>
  

  <script>
    function editWorkout(index) {
      const workout = <%- JSON.stringify(workouts) %>[index];
      document.getElementById('type').value = workout.type;
      document.getElementById('duration').value = workout.duration;
      document.getElementById('calories').value = workout.calories;
      document.getElementById('date').value = new Date(workout.date).toISOString().split('T')[0];
      document.getElementById('workoutIndex').value = index;
      new bootstrap.Modal(document.getElementById('addWorkoutModal')).show();
    }
  </script>

  <script>
    // Show the Edit Goal Popup
    function openGoalPopup() {
      document.getElementById('goalModal').style.display = 'block';
    }

    // Close the Edit Goal Popup
    function closeGoalPopup() {
      document.getElementById('goalModal').style.display = 'none';
    }
  </script>

  
  

  <script>
    // Workout Chart (Pie Chart)
    const workoutCtx = document.getElementById('workoutChart').getContext('2d');
    new Chart(workoutCtx, {
      type: 'pie',
      data: {
        labels: <%- JSON.stringify(stats.map(s => s.type)) %>,
        datasets: [{
          data: <%- JSON.stringify(stats.map(s => s.typeCount)) %>,
          backgroundColor: ['#ff6384', '#36a2eb', '#ffce56', '#4caf50', '#9575cd']
        }]
      }
    });

  // Activity Chart (Bar Chart)
  console.log("Activity Data:", <%- JSON.stringify(activityData) %>);

  const activityCtx = document.getElementById('activityChart').getContext('2d');
  new Chart(activityCtx, {
    type: 'bar',
    data: {
      labels: <%- JSON.stringify(activityData.map(a => a.date)) %>, // Week start dates
      datasets: [{
        label: 'Activity Duration (mins)',
        data: <%- JSON.stringify(activityData.map(a => a.totalDuration)) %>,
        backgroundColor: '#42a5f5'
      }]
    },
    options: {
      responsive: true,
      scales: {
        x: { 
          title: { display: true, text: 'Week Commencing' },
          ticks: { autoSkip: true, maxRotation: 0, minRotation: 0 }
        },
        y: { 
          title: { display: true, text: 'Duration (mins)' },
          beginAtZero: true
        }
      }
    }
  });
</script>





<script>
  const profilePic = document.getElementById('profilePic');
  const editOverlay = document.getElementById('editOverlay');
  const uploadModal = new bootstrap.Modal(document.getElementById('uploadModal'));

  // Hover Effect: Show/Hide Edit Overlay
  profilePic.addEventListener('mouseenter', () => {
    editOverlay.style.opacity = '1';
  });

  profilePic.addEventListener('mouseleave', () => {
    editOverlay.style.opacity = '0';
  });

  // Show Modal on Click
  profilePic.addEventListener('click', () => {
    uploadModal.show();
  });

  editOverlay.addEventListener('click', () => {
    uploadModal.show();
  });
</script>


  <script>
    function openGoalPopup() {
      document.getElementById('goalModal').style.display = 'block';
    }

    function closeGoalPopup() {
      document.getElementById('goalModal').style.display = 'none';
    }

    async function saveGoals() {
      const formData = new FormData(document.getElementById('goalForm'));
      const goals = {
        workoutFrequency: formData.get('workoutFrequency'),
        caloriesBurned: formData.get('caloriesBurned'),
        caloriesConsumed: formData.get('caloriesConsumed'),
      };

      try {
        const response = await fetch('/update-goals', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(goals),
        });

        if (response.ok) {
          alert('Goals updated successfully!');
          window.location.reload();
        } else {
          alert('Failed to update goals. Please try again.');
        }
      } catch (error) {
        console.error('Error updating goals:', error);
        alert('Error updating goals.');
      }
    }
  </script>
</body>
</html>









